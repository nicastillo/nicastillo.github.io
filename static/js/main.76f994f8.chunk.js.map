{"version":3,"sources":["images/compass.svg","LifeEvent.js","App.js","reportWebVitals.js","index.js"],"names":["LifeEvent","props","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","React","useState","top","left","transform","modalStyle","open","setOpen","body","style","className","id","details","title","src","imagePath","description","onClick","Modal","onClose","aria-labelledby","aria-describedby","App","lifeData","events","useEffect","logo","alt","Object","keys","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"svDAAe,MAA0B,oC,uCCwE1BA,EAlEG,SAACC,GAWf,IAUMC,EAVYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,OAGnBC,GArBS,EAuBJC,IAAMC,UAtB3B,WAII,MAAO,CACHC,IAAI,GAAD,OAJK,GAIL,KACHC,KAAK,GAAD,OAJK,GAIL,KACJC,UAAU,cAAD,OAND,GAMC,eALA,GAKA,UAeVC,EAvBkB,sBAwBDL,IAAMC,UAAS,GAxBd,mBAwBlBK,EAxBkB,KAwBZC,EAxBY,KAiCnBC,EACF,sBAAKC,MAAOJ,EAAYK,UAAWzB,EAAQG,MAA3C,UACE,oBAAIuB,GAAG,qBAAP,SAA6B3B,EAAM4B,QAAQC,QAC3C,sBAAKH,UAAU,eAAf,UACE,qBAAKI,IAAK9B,EAAM4B,QAAQG,YAExB,mBAAGJ,GAAG,2BAAN,SACC3B,EAAM4B,QAAQI,oBAKvB,OACI,sBAAKN,UAAU,QAAf,UACI,qBAAKA,UAAU,mBACf,sBAAMA,UAAU,UAAUO,QAvBf,WACfV,GAAQ,IAsBJ,SAAgDvB,EAAM4B,QAAQC,QAG9D,cAACK,EAAA,EAAD,CACIZ,KAAMA,EACNa,QAxBQ,WAChBZ,GAAQ,IAwBAa,kBAAgB,qBAChBC,mBAAiB,2BAJrB,SAMKb,Q,MClCFc,MAvBf,WAAgB,IAAD,EAEerB,mBAASsB,GAFxB,mBAENC,EAFM,KAOb,OAPa,KAGbC,qBAAU,eAKR,sBAAKf,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKI,IAAKY,EAAMhB,UAAU,WAAWiB,IAAI,WAE3C,qBAAKjB,UAAU,OAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,aAAf,SACGkB,OAAOC,KAAKL,GAAQM,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAqBnB,QAASY,EAAOO,IAArBA,gBCT7CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76f994f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/compass.9051f694.svg\";","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './LifeEvent.css';\r\n\r\nconst LifeEvent = (props) => {\r\n    function getModalStyle() {\r\n        const top = 50;\r\n        const left = 50;\r\n      \r\n        return {\r\n            top: `${top}%`,\r\n            left: `${left}%`,\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          position: 'absolute',\r\n          width: 400,\r\n          backgroundColor: theme.palette.background.paper,\r\n          border: '2px solid #000',\r\n          boxShadow: theme.shadows[5],\r\n          padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">{props.details.title}</h2>\r\n          <div className=\"modalWrapper\">\r\n            <img src={props.details.imagePath}/>\r\n\r\n            <p id=\"simple-modal-description\">\r\n            {props.details.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    return (\r\n        <div className=\"event\">\r\n            <div className=\"event-lifeline\"></div>\r\n            <span className=\"content\" onClick={handleOpen}>{props.details.title}\r\n            </span>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default LifeEvent;","import logo from './images/compass.svg';\nimport lifeData from './data/lifedata.json';\nimport React, { useState, useEffect } from 'react';\nimport LifeEvent from './LifeEvent';\nimport './App.css';\n\nfunction App() {\n\n  const [events, setEvents] = useState(lifeData);\n  useEffect(() => {\n    // Update the document title using the browser API\n    //document.title = `You clicked ${events} times`;\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <div className=\"Main\">\n        <div className=\"LifePathWrapper\">\n          <div className=\"event-list\">\n            {Object.keys(events).map(key => <LifeEvent key={key} details={events[key]} />)}\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}